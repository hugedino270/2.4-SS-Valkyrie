#####################################################################
# 	Macros
#####################################################################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}



[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    CG28                      ; Home if not homed to get everything turned on
    QUAD_GANTRY_LEVEL         ; Level
    BED_MESH_CALIBRATE
    Clean_Nozzle            ; Move across the brush
    G28 Z                     ; Home the Z now that nozzle is clean

# [gcode_macro PRINT_START]
# #   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# gcode:
#     SAVE_GCODE_STATE NAME=start
#     G28
#     M117 Starting warmup
#     G1 Z20 F3000                       ; move nozzle away from bed
#     M117 Warmup
#     G32                                ; Home XYZ and do QGL
#     G28 Z
#     M117 Starting Print
#     RESTORE_GCODE_STATE NAME=start

# ##CLAUDE CREATED MACRO#######################################\
[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    # {% set SOAK = params.SOAK|default(0)|int %}
    
    # Home if needed and get everything to a known state
    STATUS_HOMING
    G28
    
    # Start bed heating
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    
    # # If soak time is specified, wait
    # {% if SOAK > 0 %}
    #     STATUS_HEATING
    #     G4 P{SOAK * 60000}
    # {% endif %}
    
    # QGL and mesh after bed is heated
    STATUS_HEATING
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP * 0.9}
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    G28 Z  # QGL may have affected Z position
    
    # Only generate mesh at higher temperatures
    {% if BED_TEMP > 90 %}
        M117
        BED_MESH_CALIBRATE
    {% endif %}
    
    # Move to center while heating nozzle
    G90
    G0 X175 Y175 Z20 F9000
    
    # Heat nozzle
    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP - 5}

    # MMU_START_LOAD_INITIAL_TOOL
    # Clean nozzle
    CLEAN_NOZZLE
    
    G28 Z
    BED_MESH_PROFILE LOAD=default
    STATUS_PRINTING
    
    VORON_PURGE
    
    # Reset extruder
    G92 E0
    
    

[gcode_macro PURGE_BUCKET]
gcode:
    SAVE_GCODE_STATE NAME=PURGE
    G90                    ; absolute
    G0 X75 Y355 Z2         ; go to purge bucket
    G1 X25 E10 F500        ; purge some filament into bucket
    G1 X75 E3 F500         ; purge some filament into bucket
    G0 X120 Y355 F750      ; move across purge brush
    G1 Z3                  ; Raise and return
    RESTORE_GCODE_STATE NAME=PURGE

# [gcode_macro PRINT_START]
# #   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# gcode:
# #    default_parameter_BED: 60 #target bed temperature
# #    default_parameter_EXTRUDER: 210 #target extruder temperature

#     SAVE_GCODE_STATE NAME=start

#     M117 Starting warmup
#     G1 Z20 F3000                       ; move nozzle away from bed
#     M117 Warmup
#     M190 S{BED}                        ; set bed temp and wait for it reach temp
#     M109 S{EXTRUDER|int}               ; M109 heat and wait for it to reach temp
#     G32                                ; Home XYZ and do QGL

#     BED_MESH_PROFILE LOAD=default

#     G1 Z5 F5000                        ; move head 5mm from bed surface
#     M83                                ; Make the E relative independant of other axis
#      M117 Purging
#      PURGE_BUCKET
#      G1 E2 F1500 # unretract
#     M117 Starting Print
#     RESTORE_GCODE_STATE NAME=start

[bed_mesh]
speed: 300
horizontal_move_z: 10
# Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
zero_reference_position: 175,175 #for use with stock z endstop
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 7,7 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-1.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0 X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR

    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"


# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 800

# [safe_z_home]
# ##	XY Location of the Z Endstop Switch
# ##	Update -10,-10 to the XY coordinates of your endstop pin 
# ##	(such as 157,305) after going through Z Endstop Pin
# ##	Location Definition step.
# home_xy_position:232,350
# speed:10
# z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

gantry_corners:
	-60,-10
	410,420
##	Probe points
points:
	25,25
	25,325
	325,325
	325,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10




#Bed Mesh Macros
[gcode_macro BED_CALIBRATE_60]
gcode:
  G28 
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
  RESPOND TYPE=echo MSG="Setting bed to 60C"
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=57 MAXIMUM=60
  RESPOND TYPE=echo MSG="Waiting to reach desired temperature"
  RESPOND TYPE=echo MSG="Now heatsoaking"
  G4 P180000
  RESPOND TYPE=echo MSG="Finished heatsoaking"
  BED_MESH_CALIBRATE PROFILE=default METHOD=automatic 
  G4 P5000
  SAVE_CONFIG

[gcode_macro BED_CALIBRATE_80]
gcode:
  G28 
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=80
  RESPOND TYPE=echo MSG="Setting bed to 80C"
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=77 MAXIMUM=80
  RESPOND TYPE=echo MSG="Waiting to reach desired temperature"
  RESPOND TYPE=echo MSG="Now heatsoaking"
  G4 P180000
  RESPOND TYPE=echo MSG="Finished heatsoaking"
  BED_MESH_CALIBRATE PROFILE=default METHOD=automatic 
  G4 P5000
  SAVE_CONFIG

[gcode_macro BED_CALIBRATE_100]
gcode:
  G28 
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100
  RESPOND TYPE=echo MSG="Setting bed to 100C"
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=97 MAXIMUM=100
  RESPOND TYPE=echo MSG="Waiting to reach desired temperature"
  RESPOND TYPE=echo MSG="Now heatsoaking"
  G4 P180000
  RESPOND TYPE=echo MSG="Finished heatsoaking"
  BED_MESH_CALIBRATE PROFILE=default METHOD=automatic 
  G4 P5000
  SAVE_CONFIG


#PID Macros
[gcode_macro PID_EXTRUDER_210]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=210
  SAVE_CONFIG

[gcode_macro PID_EXTRUDER_230]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=230
  SAVE_CONFIG

[gcode_macro PID_EXTRUDER_250]
gcode:
 PID_CALIBRATE HEATER=extruder TARGET=250
 SAVE_CONFIG

[gcode_macro PID_BED_60]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  SAVE_CONFIG

[gcode_macro PID_BED_80]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=80
  SAVE_CONFIG

[gcode_macro PID_BED_100]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=100
  SAVE_CONFIG

#Change the behavior of cancelling a print, improvement
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT
  CANCEL_PRINT_BASE


#Filament Loading and Unloading Macros
[gcode_macro FILAMENT_LOAD]
gcode:
    {% set load = params.L|default(510)|float %}
    {% set extruder_temp = params.T|default(240)|float %}
    {% if printer.extruder.temperature < 225 %}
      RESPOND TYPE=echo MSG="Temperature too low, setting correct temperature"
      M109 S225
    {% endif %}
      RESPOND TYPE=echo MSG="Loading Filament..."
      M83                                                                         # relative extrusion
      G1 E{load} F1500                                                            # extrude fast
      G4 P1000                                                                    # wait 1 second
      G1 E80 F200                                                                 # extrude slow
      RESPOND TYPE=echo MSG="Finished..."
      M104 S0


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

    

[gcode_macro FILAMENT_UNLOAD]
gcode:
    {% set unload = params.U|default(590)|float %}
    {% set extruder_temp = params.T|default(240)|float %}
    {% if printer.extruder.temperature < 225 %}
      RESPOND TYPE=echo MSG="Temperature too low, setting correct temperature"
      M109 S225
    {% endif %}
      RESPOND TYPE=echo MSG="Unloading Filament..."
      M83                                                                         # relative extrusion
      G1 E2  F200                                                                 # extrude a little
      G1 E-10  F200                                                               # retract a little
      G1 E-{unload} F1500                                                         # retract a lot
      RESPOND TYPE=echo MSG="Finished..."
      M104 S0


[gcode_macro CHAMBER_PREHEAT]
description: Preheats the chamber using the bed (no sensor version)
variable_bed_temp: 100    # Bed temperature to use for heating
variable_preheat_time: 25 # Minutes to preheat
gcode:
    # Save current temperatures if any were set
    {% set svv = printer.save_variables.variables %}
    
    # Heat the bed
    M140 S{params.BED_TEMP|default(bed_temp)}
    
    # Turn on bed fan at medium speed to help circulate heat
    SET_FAN_SPEED FAN=BedFans SPEED=0.5
    
    # Wait for bed to reach temperature
    M190 S{params.BED_TEMP|default(bed_temp)}
    
    # Wait for specified preheat time
    {% set wait_time = params.TIME|default(preheat_time)|int %}
    RESPOND MSG="Preheating chamber for {wait_time} minutes..."
    G4 P{wait_time|int * 60 * 1000}  # Convert minutes to milliseconds
    
    
    SET_FAN_SPEED FAN=BedFans SPEED=0
    
    # Notify that preheat is complete
    RESPOND MSG="Chamber preheat complete"


[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}

[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>]
  Set tool temperature and wait.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE WAIT=1 {newparameters}
  {% else %}
    M109.1 {rawparams}
  {% endif %}



